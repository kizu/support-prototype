include ../../node_modules/bemto.jade/bemto

- var properties = getCollection("CSSproperties").toJSON()
- var colspans = {}
- var supportTables = {}
- for property in properties
  - var colspanForProp = {}
  - supportTables[property.name] = {}
  - for value in Object.keys(property.values)
    - supportTables[property.name][value] = property.values[value] && property.values[value].support || property.support || {}

    - for browser in site.browsers
      - var support = supportTables[property.name][value][browser.toLowerCase()]
      if support && typeof support != 'number' && support.length > 1
        - colspanForProp[browser] = support.length
  - colspans[property.name] = colspanForProp


mixin specifications()
  h2 Specifications
  ul
    li: a(href='http://www.w3.org/TR/css3-text/') Latest version
    li: a(href='http://dev.w3.org/csswg/css-text/') Editor's draft

mixin property-list()
  h2 Property List
  ul
    - for property in properties
      li: a(href='#' + property.name)= property.name

mixin property-table(property)
  mixin property-table-caption(property)
    caption
      code= property.name
      = ' property'

  mixin property-table-head(property)
    thead
      tr
        th(rowspan="2") Value
        th(rowspan="2") Introduced
        th(colspan="10") Support
      tr.browsers
        - for browser in site.browsers
          th(colspan=colspans[property.name][browser]): span= browser

  mixin property-table-support-cell(property, value, browser)
    - var support = supportTables[property.name][value][browser.toLowerCase()]
    if support
      if typeof support == 'number'
        //- Fully supported
        td.supported(colspan=colspans[property.name][browser])
          = support
      else
        - for subSupport, subSupportIndex in support
          if support.length > 1 && subSupportIndex == support.length - 1
            //- Fully supported after partial
            td.supported.half-width
              = subSupport
          else
            //- Partial support
            td.prefixed(
              class = support.length > 1 ? 'half-width' : false,
              colspan = support.length == 1 && colspans[property.name][browser]
              )
              = subSupport
    else
      //- Not supported
      td.unsupported(colspan=colspans[property.name][browser])
        | No

  mixin property-table-body(property)
    tbody
      - for value in Object.keys(property.values)
        tr
          //- Value name
          td: +b(value.indexOf('>') >= 0 ? 'var' : 'code' )= value

          //- Introduced in
          td= property.values[value] && property.values[value].introduced || property.introduced

          //- Browser values
          - for browser in site.browsers
            +property-table-support-cell(property, value, browser)

  table(id=property.name)
    +property-table-caption(property)
    +property-table-head(property)
    +property-table-body(property)

mixin property-specs(property)
  if property.specs
    h2 Specifications
    ol.specs
      - for spec in property.specs
        - var specData = site.specs.Text[spec]
        li
          a(href = specData.link.replace('%s', property.name))
            = specData.name
          = ' [' + specData.status + ']'

mixin property-prefixes(property)
  if property.prefixes
    h2 Prefixes
    ul
      - for prefix in property.prefixes
        li= prefix

mixin page-body()
  body
    block

mixin page-head()
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible", content="IE=EmulateIE7,IE=edge")
    meta(name="viewport", content="width=device-width")

    //- Including docpad's stuff
    != getBlock("meta").toHTML()

    != getBlock("styles").toHTML()
    != getBlock("styles").add(["s/support-prototype.css"]).toHTML()

    title= getPreparedTitle()

    block

